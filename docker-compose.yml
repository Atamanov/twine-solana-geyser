version: '3.8'

services:
  timescaledb:
    image: timescale/timescaledb:latest-pg16
    container_name: twine-timescaledb
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-twine_solana_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres_password}
      # Additional users will be created by init.sql
      GEYSER_USER: ${GEYSER_USER:-geyser_writer}
      GEYSER_PASSWORD: ${GEYSER_PASSWORD:-geyser_writer_password}
      # TimescaleDB specific settings
      TIMESCALEDB_TELEMETRY: "off"
    ports:
      - "127.0.0.1:5432:5432"  # Bind to localhost only
    volumes:
      # Database data
      - timescale_data:/var/lib/postgresql/data
      # Init scripts
      - ./schema/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      # Custom PostgreSQL configuration
      - ./config/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    command: >
      postgres
      -c shared_preload_libraries=timescaledb,pg_stat_statements
      -c config_file=/etc/postgresql/postgresql.conf
    shm_size: 1gb
    deploy:
      resources:
        limits:
          cpus: '8'
          memory: 16G
        reservations:
          cpus: '4'
          memory: 8G
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d twine_solana_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Optional: PgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: twine-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@twine.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin_password}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "0.0.0.0:5050:80"  # Accessible from any interface
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      timescaledb:
        condition: service_healthy
    profiles:
      - dev

  # Optional: Grafana for monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: twine-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD:-admin_password}
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
    ports:
      - "0.0.0.0:3000:3000"  # Accessible from any interface
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      timescaledb:
        condition: service_healthy
    profiles:
      - monitoring

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: twine-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      timescaledb:
        condition: service_healthy
    profiles:
      - monitoring

  # PostgreSQL exporter for Prometheus
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: twine-postgres-exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres_password}@timescaledb:5432/${POSTGRES_DB:-twine_solana_db}?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      timescaledb:
        condition: service_healthy
    profiles:
      - monitoring

volumes:
  timescale_data:
    driver: local
  pgadmin_data:
    driver: local
  grafana_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  default:
    name: twine-network
    driver: bridge